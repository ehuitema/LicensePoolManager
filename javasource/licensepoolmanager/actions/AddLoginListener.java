// This file was generated by Mendix Business Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package licensepoolmanager.actions;

import com.mendix.core.Core;
import com.mendix.core.action.user.LoginAction;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * This starts the action listener which checks before logging a user in if the maximum number of concurrent users for a license pool has not yet been exceeded.
 */
public class AddLoginListener extends CustomJavaAction<Boolean>
{
	public AddLoginListener(IContext context)
	{
		super(context);
	}

	@Override
	public Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		// Create new Login Listener with a replace event.
		LoginListener listener = new LoginListener(LoginAction.class);
		listener.addReplaceEvent(LoginHandler.class.getName().replace(".actions.", "."));
		// Add the LoginHandler and the LoginListener to the Mendix list.
		Core.addUserAction(LoginHandler.class);				
		Core.addListener(listener);				
		// Log that the Listener is started
		Core.getLogger("LicensePoolManager").info("LicensePoolManager login listener started.");
			
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "AddLoginListener";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
